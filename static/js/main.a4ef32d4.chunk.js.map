{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","components/Layout/Layout.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Layout","children","className","styles","ContactList","contacts","onRemoveTask","map","id","text","number","ContactListItem","Text","ContactListText","ContactListActions","ContactListButton","onClick","ContactForm","state","handleChange","event","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","onAddTask","onSubmit","this","form","box","input","type","pattern","name","title","placeholder","required","onChange","btn","button","Component","Filter","onChangeFilter","label","App","filter","addTask","task","uuidv4","find","alert","prevState","removeTask","taskId","changeFilter","getVisibleTasks","includes","visibleTasks","length","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.a4ef32d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1eCsf\",\"ContactListItem\":\"ContactList_ContactListItem__yD5_W\",\"TaskListItem\":\"ContactList_TaskListItem__36FuM\",\"Text\":\"ContactList_Text__hVy_g\",\"ContactListText\":\"ContactList_ContactListText__1p2AI\",\"ContactListActions\":\"ContactList_ContactListActions__3sN0w\",\"ContactListButton\":\"ContactList_ContactListButton__9bg7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactForm_box__2XCUA\",\"input\":\"ContactForm_input__2oEoD\",\"input2\":\"ContactForm_input2__26Nvt\",\"btn\":\"ContactForm_btn__2jeAL\",\"button\":\"ContactForm_button__3YNFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3zpjp\",\"input\":\"Filter_input__3p4vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1DYck\"};","import React from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.Layout}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactList({ contacts, onRemoveTask }) {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, text, number }) => (\r\n        <li key={id} className={styles.ContactListItem}>\r\n          <div className={styles.Text}>\r\n            <p className={styles.ContactListText}>{text} </p>\r\n            <p className={styles.ContactListText}>{number}</p>\r\n          </div>\r\n\r\n          <section className={styles.ContactListActions}>\r\n            <button\r\n              className={styles.ContactListButton}\r\n              onClick={() => onRemoveTask(id)}\r\n            >\r\n              DELETE\r\n            </button>\r\n          </section>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddTask: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    text: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  handleChangeNumber = event => {\r\n    this.setState({ number: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onAddTask(this.state.text, this.state.number);\r\n    this.setState({ text: '' });\r\n    this.setState({ number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <div className={styles.box}>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            name=\"name\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            placeholder=\"Enter the name\"\r\n            required\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            placeholder=\"Enter the number\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChangeNumber}\r\n          />\r\n        </div>\r\n        <div className={styles.btn}>\r\n          <button type=\"submit\" className={styles.button}>\r\n            Добавить заметку\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <form>\r\n      <label className={styles.label}>\r\n        Filter tasks:{' '}\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={event => onChangeFilter(event.target.value)}\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  static propTypes = {};\r\n\r\n  state = { contacts: [], filter: '' };\r\n\r\n  addTask = (text, number) => {\r\n    let task = {\r\n      id: uuidv4(),\r\n      text,\r\n      number,\r\n    };\r\n\r\n    this.state.contacts.find(task => task.text === text)\r\n      ? alert('Such name already exists')\r\n      : this.setState(prevState => {\r\n          return { contacts: [...prevState.contacts, task] };\r\n        });\r\n  };\r\n\r\n  removeTask = taskId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== taskId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleTasks = () => {\r\n    let { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(task => task.text.includes(filter));\r\n  };\r\n\r\n  render() {\r\n    let { contacts, filter } = this.state;\r\n    let visibleTasks = this.getVisibleTasks();\r\n\r\n    return (\r\n      <Layout>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddTask={this.addTask} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        {contacts.length > 0 && (\r\n          <ContactList contacts={visibleTasks} onRemoveTask={this.removeTask} />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport './base.css';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}